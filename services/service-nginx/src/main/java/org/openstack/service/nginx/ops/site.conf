# All the upstreams...
upstream backend-${uniqueKey} {
	ip_hash;

	<#list backends as backend>
	    server   ${backend.address}:${backend.port?c};
	</#list>
}

# Non-SSL servers
server {
    listen       ${httpPort?c};
    server_name  ${hostname};

	access_log  /var/log/nginx/${uniqueKey}.access.log;

	keepalive_timeout	75;
	
    # Main location
    location / {
        proxy_pass         http://backend-${uniqueKey};

        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
    }
}

<#if useSsl>
# SSL server
server {
	listen   443;
    server_name  ${hostname};

	access_log  /var/log/nginx/${uniqueKey}.access.log;

    ssl                  on;

    # OK, this obviously won't work if we're serving multiple hosts!
    ssl_certificate      certs/${uniqueKey}_server.crt;
    ssl_certificate_key  certs/${uniqueKey}_server.key;

	# This is borrowed from the default debian config
	ssl_session_timeout  5m;

	ssl_protocols  SSLv3 TLSv1;
	ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
	ssl_prefer_server_ciphers   on;

    # Forward to backends
    location / {
        proxy_pass         http://backend-${uniqueKey};
        #proxy_redirect     off;

        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
		proxy_set_header   X-Forwarded-Proto https;
    }
}
</#if>
